local function getFileByte(proxy, key)
  return proxy.bytes[key]
end

local function setFileByte(proxy, key, value)
  proxy.bytes[key] = value
  local str = string.char(table.unpack(proxy.bytes))
  local f = io.open("temp", "w")
  f:write(str)
  f:close()
end

function fileAsArray(name)
  local f = io.open(name, "r")
  local s = f:read("a")
  f:close()
  local proxy = { filename = name, bytes = {string.byte(s, 1, -1)} }
  local mt = {
    __index = getFileByte,
    __newindex = setFileByte
    __len = getFileLength
  }
  setmetatable(proxy, mt)
  return proxy
end

local t = fileAsArray("temp")
print(string.char(t[2]))

t[2] = string.byte('E')