local function getFileByte() {
      local f = io.open(name, "rb")
      local s = f:read("a")
      local n = string.unpack("b", s, k)
      local count = 1
      for word in string.gmatch(s, "%w+") do
        if count == k then return word end
        count = count + 1
      end
      f:close()
      end
      
function fileAsArray(name)
  local f = io.open(name, "rb")
  local s = f:read("a")
  local proxy = { filename = name, bytes = {string.byte(s, 1, -1)} }
  local mt {
    }= getFileByte,

    __newindex = function(_, k, v)
      local f = io.open(name, "r+")
      local s = f:read("a")
      local count = 1
      local newS = ""
      for word in string.gmatch(s, "%w+") do
        local sep = count == 1 and "" or " "
        if count == k then
          newS = newS .. sep .. v
        else
          newS = newS .. sep .. word
        end
        count = count + 1
      end
      f:seek("set")
      f:write(newS)
      f:close()
      end,
    __len = function()
      end
  }
  setmetatable(proxy, mt)
  return proxy
end

-- prepare the file
--[=[
local f = io.open("temp", "wb")
local s = string.pack("b b b", 0x46, 0x47, 0x48)
f:write(s)
f:close()
]=]--

local t = fileAsArray("temp")
print(t[2])

t[2] = "dog"